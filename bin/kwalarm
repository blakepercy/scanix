#!/bin/bash
set +e

source ~/scanix/lib/log4bash

log="scanix.log"
HELP=false
VERB=false

# Use > 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use > 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
while [[ $# > 0 ]]
do
key="$1"

case $key in
    -e|--expression)
    EXPRESSION="$2"
    shift # past argument
    ;;
    -x|--excludes)
    EXCLUDES="$2"
    shift
    ;;
    -s|--searchpath)
    SEARCHPATH="$2"
    shift # past argument
    ;;
    -n|--name)
    NAME="$2"
    shift
    ;;
    -h|--help)
    HELP=true
    shift # past argument
    ;;
    -v|--verbose)
    VERB=true
    shift
    ;;
    --default)
    DEFAULT=YES
    ;;
    *)
            # unknown option
    ;;
esac
shift # past argument or value
done

if $VERB; then
    echo EXPRESSION  = "${EXPRESSION}"
    echo EXCLUDES  = "${EXCLUDES}"
    echo SEARCH PATH     = "${SEARCHPATH}"
    echo NAME    = "${NAME}"
    echo DEFAULT = "${DEFAULT}"
fi

if [[ -n $1 ]]; then
    echo "Last argument specified as non-opt/last argument:"
    echo "$1"
fi

if $HELP; then
    echo ""
    echo -e "Keword Alarm - Raise an alarm if keyword(s) are found within an input stream"
    echo -e "  Usage: stream | kwalarm -e \"regex of keywords\" -x \"regex of exclusions\" -n name"
    echo ""
else
    # Handle the piped input, line-by-line.
    cat | 
    {
        IFS=$'\n'
        while read line; do
            if [[ -n $EXPRESSION ]]; then
                if [[ -n $NAME ]]; then line=$(printf "\n[%s] - %s" $NAME $line); fi
		if [[ -n $EXCLUDES ]]; then 
		    echo $line | grep -i -v -E "($EXCLUDES)" | grep --silent -i -E "($EXPRESSION)" && \
                        ( flock 200; log_error "$line\n" | tee -a "$log" ) 200>.scanix.lock \
                    || if $VERB; then log "$line"; fi
                else
		    echo $line | grep --silent -i -E "($EXPRESSION)" && \
                        ( flock 200; log_error "$line\n" | tee -a "$log" ) 200>.scanix.lock \
                    || if $VERB; then log "$line"; fi
                fi
            fi
        done
    }
fi

