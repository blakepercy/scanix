#!/bin/bash
set +e

HELP=false

while [[ $# > 0 ]]
do
key="$1"

case $key in
    -f|--file)
    FILE="$2"
    shift # past argument
    ;;
    -p|--password)
    PASS="$2"
    shift
    ;;
    -u|--userhost)
    USERHOST="$2"
    shift
    ;;
    -t|--port)
    PORT="$2"
    shift
    ;;
    -h|--help)
    HELP=true
    shift # past argument
    ;;
    -v|--verbose)
    VERB=true
    shift
    ;;
    --default)
    DEFAULT=YES
    ;;
    *)
           # unknown option
    ;;
esac
shift # past argument or value
done

#echo FILE  = "${FILE}"
#echo PASS  = "${PASS}"
#echo USERHOST  = "${USERHOST}"
#echo PORT  = "${PORT}"

if $HELP; then
    echo ""
    echo -e "rtail - Remote Tail - run a tail command upon a remote machine for the given file"
    echo -e "  Usage: rtail -f <file> -u <user@host> -p <password> -t <port>"
    echo ""
else
    # this sleep helps when rtail is being used as part of a multi-process environment
    sleep 1
    sshpass -p "$PASS" ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -C "$USERHOST" -p "$PORT" "while ! tail -F $FILE; do sleep 1; done"
fi



